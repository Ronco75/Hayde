generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category {
  id        Int       @id @default(autoincrement())
  name      String    @db.VarChar(255)
  createdAt DateTime  @default(now()) @map("created_at") @db.Timestamp(6)
  expenses  Expense[]

  @@map("categories")
}

model Expense {
  id           Int       @id @default(autoincrement())
  categoryId   Int       @map("category_id")
  name         String    @db.VarChar(200)
  pricePerUnit Decimal   @map("price_per_unit") @db.Decimal(10, 2)
  quantity     Int       @default(1)
  amountPaid   Decimal   @default(0) @map("amount_paid") @db.Decimal(10, 2)
  createdAt    DateTime  @default(now()) @map("created_at") @db.Timestamp(6)
  category     Category  @relation(fields: [categoryId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([categoryId])
  @@map("expenses")
}

model Group {
  id        Int       @id @default(autoincrement())
  name      String    @db.VarChar(255)
  createdAt DateTime  @default(now()) @map("created_at") @db.Timestamp(6)
  guests    Guest[]

  @@map("groups")
}

model Guest {
  id               Int       @id @default(autoincrement())
  name             String    @db.VarChar(255)
  phoneNumber      String    @map("phone_number") @db.VarChar(20)
  groupId          Int       @map("group_id")
  numberOfGuests   Int       @default(1) @map("number_of_guests")
  rsvpStatus       String    @default("pending") @map("rsvp_status") @db.VarChar(20)
  invitationSentAt DateTime? @map("invitation_sent_at") @db.Timestamp(6)
  reminderSentAt   DateTime? @map("reminder_sent_at") @db.Timestamp(6)
  notes            String?
  createdAt        DateTime  @default(now()) @map("created_at") @db.Timestamp(6)
  group            Group     @relation(fields: [groupId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([groupId], map: "idx_guests_group_id")
  @@index([rsvpStatus], map: "idx_guests_rsvp_status")
  @@map("guests")
}
